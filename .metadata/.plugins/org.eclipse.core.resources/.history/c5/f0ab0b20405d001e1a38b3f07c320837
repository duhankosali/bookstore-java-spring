package com.oredata.bookStore.common.utilities.mappers;

import java.util.List;
import java.util.stream.Collectors;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Service;

import lombok.AllArgsConstructor;

@Service
@AllArgsConstructor
public class ModelMapperManager implements ModelMapperService{
	private ModelMapper modelMapper;
	
	@Override // loose mapping (For Response)
	public ModelMapper forResponse() {
		this.modelMapper.getConfiguration()
			.setAmbiguityIgnored(true)
			.setMatchingStrategy(MatchingStrategies.LOOSE);
		return this.modelMapper;
	}

	@Override // standard mapping (For Request)
	public ModelMapper forRequest() {
		this.modelMapper.getConfiguration()
			.setAmbiguityIgnored(true)
			.setMatchingStrategy(MatchingStrategies.STANDARD);
		return this.modelMapper;
	}
	
	@Override
	public <T, U> List<U> mapToList(List<T> source, Class<U> targetClass) {
	    return source.stream()
	                 .map(element -> modelMapper.map(element, targetClass))
	                 .collect(Collectors.toList());
	}

}

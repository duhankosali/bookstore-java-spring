package com.oredata.bookStore.business.concretes;


import java.util.List;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import com.oredata.bookStore.dataAccess.abstracts.BookRepository;
import com.oredata.bookStore.business.abstracts.BookService;
import com.oredata.bookStore.business.requests.CreateBookRequest;
import com.oredata.bookStore.business.responses.GetAllBooksResponse;
import com.oredata.bookStore.common.utilities.mappers.ModelMapperService;
import com.oredata.bookStore.entities.concretes.Book;

import lombok.AllArgsConstructor;

@Service // Business
@AllArgsConstructor
public class BookManager implements BookService{
	private BookRepository bookRepository;
	private ModelMapperService modelMapperService;
	
	@Override
	public List<GetAllBooksResponse> getAll() {	
		List<Book> books = bookRepository.findAll();
		System.out.print(books);
		System.out.print("check");		
		List<GetAllBooksResponse> booksResponse = books.stream()
			    .map(book -> this.modelMapperService.forResponse()
			            .map(book, GetAllBooksResponse.class))
			    .collect(Collectors.toList());

		System.out.print("check2222");
		System.out.print(booksResponse);
		return booksResponse;	
	}

	@Override
	public void add(CreateBookRequest createBookRequest) {
		// mapping
		Book book = this.modelMapperService.forRequest().map(createBookRequest, Book.class);
		
		this.bookRepository.save(book);
	}
}

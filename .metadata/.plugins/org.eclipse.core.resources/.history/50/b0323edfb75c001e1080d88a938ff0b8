package com.oredata.bookStore.business.concretes;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import com.oredata.bookStore.dataAccess.abstracts.BookRepository;
import com.oredata.bookStore.business.abstracts.BookService;
import com.oredata.bookStore.business.requests.CreateBookRequest;
import com.oredata.bookStore.business.responses.GetAllBooksResponse;
import com.oredata.bookStore.common.utilities.mappers.ModelMapperService;
import com.oredata.bookStore.entities.concretes.Book;

import lombok.AllArgsConstructor;

@Service // Business
@AllArgsConstructor
public class BookManager implements BookService{
	private BookRepository bookRepository;
	private ModelMapperService modelMapperService;
	
	@Override
	public List<GetAllBooksResponse> getAll() {	
		List<Book> books = bookRepository.findAll();
		List<GetAllBooksResponse> booksResponse = new ArrayList<GetAllBooksResponse>();
		// mapping
		for (Book book : books) {
			GetAllBooksResponse responseBook = new GetAllBooksResponse();
			responseBook.setIsbn(book.getIsbn());
			responseBook.setTitle(book.getTitle());
			responseBook.setAuthor(book.getAuthor());
			responseBook.setPrice(book.getPrice());
			responseBook.setStockQuantity(book.getStockQuantity());
			responseBook.setCreatedAt(book.getCreatedAt());
			responseBook.setUpdatedAt(book.getUpdatedAt());
			
			booksResponse.add(responseBook);
		}
		
		return booksResponse;	
	}

	@Override
	public void add(CreateBookRequest createBookRequest) {
		// mapping
		Book book = this.modelMapperService.forRequest().map(createBookRequest, Book.class);
		
		this.bookRepository.save(book);
	}
}
